@page "/home"
@using CashTrack.DataModel.Model
@using CashTrack.DataAccess.Services.Interface
@inject NavigationManager Navigation

<h1>Transactions</h1>

<h3>Balance: @balance</h3>

<div class="row">
    <!-- Recent Transactions (Credit and Debit) -->
    <div class="col-md-6">
        <h3>Recent Transactions</h3>
        @if (recentTransactions.Any())
        {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Date</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var transaction in recentTransactions)
                    {
                                <tr class="@GetTransactionClass(transaction)">
                                    <td>@transaction.title</td>
                                    <td>@transaction.date.ToShortDateString()</td>
                                    <td>@transaction.amount</td>
                                </tr>
                    }
                    </tbody>
                </table>
                <!-- View All Button -->
                <button class="btn btn-primary" @onclick="NavigateToCreditDebit">View All</button>
        }
        else
        {
                <p>No recent transactions available.</p>
        }
    </div>

    <!-- Pending Debts -->
    <div class="col-md-6">
        <h3>Pending Debts</h3>
        @if (debtTransactions.Any())
        {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Date</th>
                            <th>Amount</th>
                            <th>Due Date</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var transaction in debtTransactions)
                    {
                                <tr class="table-warning">
                                    <td>@transaction.title</td>
                                    <td>@transaction.date.ToShortDateString()</td>
                                    <td>@transaction.amount</td>
                                    <td>@transaction.duedate?.ToShortDateString()</td>
                                </tr>
                    }
                    </tbody>
                </table>
        }
        else
        {
                <p>No pending debts available.</p>
        }
    </div>
</div>

@code {
    private List<Transaction> recentTransactions = new List<Transaction>(); // Combined credit and debit transactions
    private List<Transaction> debtTransactions = new List<Transaction>();
    private double balance = 0.0;

    [Inject] public ITransactionService transactionService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var allTransactions = await transactionService.GetAllTransactions();

        // Combine credit and debit transactions for the "Recent Transactions" table
        recentTransactions = allTransactions
            .Where(t => t.transactionType == TransactionType.credit || t.transactionType == TransactionType.debit)
            .OrderByDescending(t => t.date) // Sorting by the most recent date
            .ToList();

        debtTransactions = allTransactions.Where(t => t.transactionType == TransactionType.debt).ToList();

        balance = await transactionService.GetBalance();
    }

    // Method to get the class for styling based on transaction type (credit = green, debit = red)
    private string GetTransactionClass(Transaction transaction)
    {
        return transaction.transactionType switch
        {
            TransactionType.credit => "table-success", // Green for Credit
            TransactionType.debit => "table-danger",   // Red for Debit
            _ => ""
        };
    }

    // Method to navigate to the Credit-Debit page
    private void NavigateToCreditDebit()
    {
        Navigation.NavigateTo("/credit-debit");
    }
}
